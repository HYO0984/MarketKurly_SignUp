/////////////////////////////////////////////////////////////////////////
// 아이디 정규표현식 해설
// 영문은 필수 1자이상 반드시 입력되고 숫자는 선택 입력된다.
/////////////////////////////////////////////////////////////////////////
//.모든 문자 ALL 문자 공백 숫자 특수문자 모두를 의미
// * 0회 이상 연속 사용
// + 1회 이상 연속 사용
// ? 1자리(1글자) 연속 사용 불가
// [A-Za-z] 범위 : 영문 대소문자의 범위
// [0-9] 범위 : 숫자의 범위


// 6자 이상의 영문+혹은(또는) 영문과 숫자*를 조햡
// (?=.*[A-Za-z])+ 영문이 반드시 1자이상 와야한다 // ? = 한 자의 의미 
//               <- + 반드시 와야함
//왼쪽 ? 1자 이상 영문 대소문자 범위를 반드시 1회 이상 입력하라 정규표현식


// (?=.*[0-9])*  숫자는 1자 이상 올 수도 안 올 수도있다.
//곽괄호 [0-9] => 축약표시 \d 
//단순히 문자로 표시 출력하자하면 역슬래쉬 뒤에 표기한다.
// \\ \/ \[ \] \> \< \. \, \? ........\( \) \=
// (?=.*\d)*

// (?=.*[0-9])*  숫자는 1자 이상 올 수도 안 올 수도있다.
//            <- * 안와도 됨
//왼쪽 ? 1자 이상 숫자의 범위를 0회 이상 입력하라 정규표현식

//[A-Za-z0-9] 문자 숫자포함 (문자숫자범위)
//{6,} 6자이상 
// 문자 필수 숫자 필수
//const regExpId = /(?=.*[A-Za-z])+(?=.*[0-9])+[A-Za-z0-9]{6,}/;
//문자 필수 숫자 선택
//const regExp = /(?=.*[A-Za-z])+(?=.*[0-9])*[A-Za-z0-9]{6,}/;


//const regExp = /(?=.*[A-Za-z])+(?=.*[0-9])*[A-Za-z0-9]{6,}/
//정규표현식 진위여부확인
//정규표현식.test('스트링(문자열)');
//regExpId.test('입력상자.값');

//글자단위로(문자열 string) 진위여부 체크
//var idValue = $(this).val();
//console.log('idValue', idValue);
//console.log('idValue.toString()',idValue.toString()); //입력값을 문자열로 변환


//아이디 입력제한
//정규표현식 : 아이디 - 6자이상 그리고 영문으로 입력
//  /정규표현식/  슬래쉬는 정규표현식 앞뒤를 감싼다
// ^ - 시작 문자
// $ - 종료 문자
// 문자의 범위 [] 브라캣
// 영문 대소문자 [A-za-z] 대소문자 a-z까지만 허용하는 정규표현식(RegExp)
//공백은 절대X

// digit 숫자 소문자 숫자 \d [0-9] - 긍정
// digit 숫자 대문자 숫자 \D [^0-9] - 부정(NOT)

//space 공백 \s
//space !공백 \S - 부정

// 알파벳과 숫자 정규표현식
// {} 중괄호 수량 딱 6자 /[]{6}/;
// {} 중괄호 수량 6자 이상 /[]{6,}/;
// {} 중괄호 수량 6자 이상 20자이내 /[]{6,20}/;

// [^] 부정 -각괄호 안에서는 부정의의미  
// ^[] -각괄호 밖에서는 시작의의미  
//const regExpTd = /[^A-Za-z0-9]{6,20}/;
// . 모든 문자 
//글자 수만 제안 
// /.{10,}/ 모든 문자 10글자 이상

//공백제거 
// \s 역슬래쉬 s space
// ^\s 역슬래쉬 s space

//const regExpTd = /.[^\s]{10,}/; //공백 불허
//const regExpTd = /^[A-Za-z0-9]{6,}$/;

//테스트
//console.log(regExpTd.test('love123'));  //true
//console.log(regExpTd.test('123456')); //false - 숫자오류
//console.log(regExpTd.test('러브 숫자')); //false - 한글 공백 오류
//console.log(regExpTd.test('^$@')); //false - 한글 공백 오류
//console.log(regExpTd.test('dfki')); //false - 6 미만 오류

//비밀번호 입력상자 이벤트
// 1.10자 이상
// 2.영문 필수(1자이상)이고 (and &&) +
//   (숫자* 또는(or ||) 특수문자* ) +두가지중에 한가지이상 조합이 되어야한다.
//   공백은 제외 그리고 2개이상 조합 
//   ex) hyori83@  성공 : 영문+숫자+특수문자 : 2가지이상 조합 조건 충족
//   ex) hyori83   성공 : 영문+숫자 : 2가지이상 조합 조건 충족
//   ex) hyori@    성공 : 영문+특수문자 : 2가지이상 조합 조건 충족
//   ex) hyori     오류 : 영문 + (숫자|특수문자)+ = 2가지이상 조합 위반 
//   ex) 53454@    오류 : 영문 + (숫자|특수문자)+ = 2가지이상 조합 BUT 영문은 필수! 위반 

// 3.동일한 숫자 3개이상 연속 사용불가

// 가이드텍스트보이기 마우스 다운하면

//이메일
//영문,숫자,특수문자 (.-_)
//시작문자 ^
//끝문자 $
//hyori30@naver.com
//hyori30@green.co.kr
//hyo_ri30@green.co.kr
//? 0~1자이상 나올 수도 있고 안나올 수도 있 = ?만